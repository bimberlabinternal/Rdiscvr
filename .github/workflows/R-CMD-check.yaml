# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches: [ master ]
  pull_request:

name: R Build and Checks

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }} / ${{ matrix.config.bioc }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-20.04, r: '4.1', bioc: 'devel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest" }
          - { os: ubuntu-20.04, r: 'release', bioc: '3.13', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest" }
          - { os: ubuntu-20.04, r: '4.0', bioc: '3.12', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest", pkgdown: "true" }

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}

      - uses: r-lib/actions/setup-pandoc@v1

      # NOTE: this was added due to iGraph install issues
      - name: Install libglpk-dev
        run: sudo apt-get install libglpk-dev

      # Note: the environment variable R_BIOC_VERSION is set to force remotes::install_bioc to follow the proper version
      - name: Setup Bioconductor
        run: |
          install.packages('devtools')
          if (!requireNamespace("BiocManager", quietly=TRUE))  install.packages("BiocManager");
          BiocManager::install(version = "${{ matrix.config.bioc }}", ask = FALSE);
          cat(append = TRUE, file = "~/.Rprofile", "options(repos = BiocManager::repositories());")
          cat(append = TRUE, file = "~/.Rprofile", "Sys.setenv(R_BIOC_VERSION=as.character(BiocManager::version()));");
        shell: Rscript {0}

      - name: Query dependencies
        run: |
          if (!requireNamespace("BiocManager", quietly=TRUE))  install.packages("BiocManager");
          BiocManager::install(version = "${{ matrix.config.bioc }}", ask = FALSE);cat(append = TRUE, file = "~/.Rprofile.site", "options(repos = BiocManager::repositories());")
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-${{ matrix.config.bioc }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-${{ matrix.config.bioc }}-${{ secrets.CACHE_VERSION || 1 }}-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      # NOTE: this is a temporary fix to manually install a patched remotes to allow it to properly install bioconductor-devel packages
      - name: Install Custom Remotes
        if: matrix.config.bioc == 'devel'
        run: |
          git clone -b git_head https://github.com/bbimber/remotes.git
          cd remotes
          R CMD build --no-build-vignettes .
          R CMD INSTALL --build remotes_2.3.0.9000.tar.gz
          cd ../
          rm -Rf remotes

      # See: https://github.com/PeteHaitch/DelayedMatrixStats/issues/84
      - name: Temporary Fixes 3.13
        if: matrix.config.bioc == '3.13'
        run: |
          BiocManager::install("PeteHaitch/DelayedMatrixStats@906ef69596558b0b7436ce95ad81a529062fa38c")
        shell: Rscript {0}

      - name: Temporary Fixes Devel
        if: matrix.config.bioc == 'devel'
        run: |
          BiocManager::install("PeteHaitch/DelayedMatrixStats@949d3868d26a63861abe6109e18e62f352c0c41e")
        shell: Rscript {0}

      - name: Install dependencies
        run: |
          getOption('repos')
          remotes::install_deps(dependencies = TRUE, upgrade = "always", repos = BiocManager::repositories())
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual"), error_on = "error", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
